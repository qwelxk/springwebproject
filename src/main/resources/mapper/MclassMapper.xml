<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.MclassMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Mclass">
    <id column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="class_manager" jdbcType="VARCHAR" property="classManager" />
    <result column="class_check" jdbcType="VARCHAR" property="classCheck" />
  </resultMap>
  <sql id="Base_Column_List">
    class_name, class_manager, class_check
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mclass
    where class_name = #{className,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from mclass
    where class_name = #{className,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Mclass">
    insert into mclass (class_name, class_manager, class_check
      )
    values (#{className,jdbcType=VARCHAR}, #{classManager,jdbcType=VARCHAR}, #{classCheck,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Mclass">
    insert into mclass
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="className != null">
        class_name,
      </if>
      <if test="classManager != null">
        class_manager,
      </if>
      <if test="classCheck != null">
        class_check,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="classManager != null">
        #{classManager,jdbcType=VARCHAR},
      </if>
      <if test="classCheck != null">
        #{classCheck,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Mclass">
    update mclass
    <set>
      <if test="classManager != null">
        class_manager = #{classManager,jdbcType=VARCHAR},
      </if>
      <if test="classCheck != null">
        class_check = #{classCheck,jdbcType=VARCHAR},
      </if>
    </set>
    where class_name = #{className,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Mclass">
    update mclass
    set class_manager = #{classManager,jdbcType=VARCHAR},
      class_check = #{classCheck,jdbcType=VARCHAR}
    where class_name = #{className,jdbcType=VARCHAR}
  </update>
</mapper>